package com.mshakir.javaapi.ws.ui.controller;

import java.util.HashMap;
import java.util.Map;
import java.util.UUID;

import javax.validation.Valid;

import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import com.mshakir.javaapi.ws.ui.model.response.UserRest;

@RestController
@RequestMapping("users")

public class UserController {

	Map<String, UserRest>users;
	
	@GetMapping
	public String getUsers() {
		return "Get Mapping Method been Called";
	}
	
	@GetMapping(path="/{userId}", produces = { MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE })
	public ResponseEntity <UserRest> getUser(@PathVariable String userId) 
	{
		if (users.containsKey(userId))
		{
			return new ResponseEntity<UserRest> (users.get(userId), HttpStatus.OK);			
		}
		else
		{
			return new ResponseEntity<UserRest>(HttpStatus.NO_CONTENT);
		}

	}

	@PostMapping(
			consumes = { MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE } ,
			produces = { MediaType.APPLICATION_XML_VALUE, MediaType.APPLICATION_JSON_VALUE }
			)
	public String createUser() {
		return "Post Mapping Method been Called";
	}

	@PutMapping
	public String updateUser() {
		return "Put Mapping Method been Called";
	}

	@DeleteMapping
	public String deleteUser() {
		return "Delete Mapping Method been Called";
	}

}
